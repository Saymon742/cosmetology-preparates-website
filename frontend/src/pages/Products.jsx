import React, { useState, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import axios from 'axios';
import './Products.css';

const Products = () => {
  const { t, i18n } = useTranslation();
  const [products, setProducts] = useState([]);
  const [filter, setFilter] = useState('all');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchProducts();
  }, []);

const fetchProducts = async () => {
  try {
    setLoading(true);
    const response = await axios.get('http://localhost:8000/products/');
    setProducts(response.data);
  } catch (error) {
    console.error('Error fetching products:', error);
    setProducts([
      {
        id: 1,
        name_uk: "–†–µ—Ç—ñ–Ω–æ–ª Complex 1%",
        name_ru: "–†–µ—Ç–∏–Ω–æ–ª Complex 1%",
        description_uk: "–ü–æ—Ç—É–∂–Ω–∞ –∞–Ω—Ç–∏–≤—ñ–∫–æ–≤–∞ —Ñ–æ—Ä–º—É–ª–∞",
        description_ru: "–ú–æ—â–Ω–∞—è –∞–Ω—Ç–∏–≤–æ–∑—Ä–∞—Å—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞",
        price: 1800,
        category: "anti-aging",
        volume: "30 –º–ª",
        concentration: "1%",
        in_stock: true
      },
      {
        id: 2,
        name_uk: "–ì—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–∞ –ö–∏—Å–ª–æ—Ç–∞",
        name_ru: "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –ö–∏—Å–ª–æ—Ç–∞", 
        description_uk: "–ì–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è",
        description_ru: "–ì–ª—É–±–æ–∫–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ",
        price: 1500,
        category: "hydration",
        volume: "50 –º–ª",
        concentration: "Multi-Molecular",
        in_stock: true
      }
    ]);
  } finally {
    setLoading(false);
  }
};

  const categories = [
    { key: 'all', label_uk: '–í—Å—ñ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏', label_ru: '–í—Å–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã', icon: 'üß™' },
    { key: 'anti-aging', label_uk: '–ê–Ω—Ç–∏–≤—ñ–∫', label_ru: '–ê–Ω—Ç–∏-—ç–π–¥–∂', icon: '‚ö°' },
    { key: 'hydration', label_uk: '–ó–≤–æ–ª–æ–∂–µ–Ω–Ω—è', label_ru: '–£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ', icon: 'üíß' },
    { key: 'brightening', label_uk: '–û—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è', label_ru: '–û—Å–≤–µ—Ç–ª–µ–Ω–∏–µ', icon: '‚ú®' },
    { key: 'lifting', label_uk: '–ü—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è', label_ru: '–õ–∏—Ñ—Ç–∏–Ω–≥', icon: 'üîº' },
    { key: 'problem-skin', label_uk: '–ü—Ä–æ–±–ª–µ–º–Ω–∞ —à–∫—ñ—Ä–∞', label_ru: '–ü—Ä–æ–±–ª–µ–º–Ω–∞—è –∫–æ–∂–∞', icon: 'üéØ' },
    { key: 'repair', label_uk: '–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è', label_ru: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', icon: 'üõ°Ô∏è' }
  ];

  const addToCart = async (product) => {
  try {
    const response = await axios.post('http://localhost:8000/cart/add/', {
      product_id: product.id,
      quantity: 1
    });

    alert(`${getName(product)} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
    
  } catch (error) {
    console.error('Error adding to cart:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É');
  }
};

  const getName = (product) => i18n.language === 'uk' ? product.name_uk : product.name_ru;
  const getDescription = (product) => i18n.language === 'uk' ? product.description_uk : product.description_ru;
  const getCategoryLabel = (category) => i18n.language === 'uk' ? category.label_uk : category.label_ru;

  const filteredProducts = filter === 'all' 
    ? products 
    : products.filter(product => product.category === filter);

  if (loading) {
    return (
      <div className="products-loading">
        <div className="loading-icon">‚öóÔ∏è</div>
        <h2>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤...</h2>
      </div>
    );
  }

  return (
    <div className="products-page">
      <section className="products-hero">
        <div className="container">
          <div className="hero-content">
            <h1>{t('products')}</h1>
            <p>–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥—ñ—á–Ω—ñ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏ –¥–ª—è –¥–æ—Å–∫–æ–Ω–∞–ª–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤</p>
          </div>
        </div>
      </section>

      <section className="products-filter">
        <div className="container">
          <div className="filter-buttons">
            {categories.map((category) => (
              <button 
                key={category.key}
                onClick={() => setFilter(category.key)}
                className={`filter-btn ${filter === category.key ? 'active' : ''}`}
              >
                <span className="filter-icon">{category.icon}</span>
                {getCategoryLabel(category)}
              </button>
            ))}
          </div>
        </div>
      </section>

      <section className="products-grid-section">
        <div className="container">
          <div className="products-grid">
            {filteredProducts.map(product => (
              <div key={product.id} className="product-card">
                <div className="product-image">
                  ‚öóÔ∏è
                </div>

                <div className="product-content">
                  <div className="product-header">
                    <h3 className="product-title">
                      {getName(product)}
                    </h3>
                    <div className="product-volume">
                      {product.volume}
                    </div>
                  </div>

                  <p className="product-description">
                    {getDescription(product)}
                  </p>

                  <div className="product-specs">
                    <div className="spec-item">
                      <strong>–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—è:</strong> {product.concentration}
                    </div>
                  </div>

                  <div className="product-footer">
                    <div className="product-price">
                      <span className="price-amount">{product.price} ‚Ç¥</span>
                      <span className="price-volume">–∑–∞ {product.volume.toLowerCase()}</span>
                    </div>
                    <button 
                      onClick={() => addToCart(product)}
                      className="add-to-cart-btn"
                    >
                      üõí {t('add_to_cart')}
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {filteredProducts.length === 0 && (
            <div className="products-empty">
              <div className="empty-icon">üîç</div>
              <h3>–ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
              <p>–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –∞–±–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</p>
            </div>
          )}
        </div>
      </section>

      <section className="products-consultation">
        <div className="container">
          <div className="consultation-content">
            <h2>–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è?</h2>
            <p>–ù–∞—à—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ñ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏ –¥–ª—è –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±</p>
            <div className="consultation-buttons">
              <a href="tel:+380671234567" className="btn btn-primary">
                üìû –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏
              </a>
              <a href="mailto:info@cosmeticlab.ua" className="btn btn-outline">
                ‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏
              </a>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Products;